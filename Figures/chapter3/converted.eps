%!PS-Adobe-3.0 EPSF-3.0
%%Title: (converted.pdf)
%%Version: 1 5
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 22:46:46 11/15/15
%%For: (zantrung)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 192 177
%%HiResBoundingBox: 0.0 0.0 192.0 177.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3680 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2015-11-15T22:46:46+08:00</xap:CreateDate>
         <xap:ModifyDate>2015-11-15T22:46:46+08:00</xap:ModifyDate>
         <xap:MetadataDate>2015-11-15T22:46:46+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:923E0CB2A78BE5119579AD0ACF8F1C8B</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:923E0CB2A78BE5119579AD0ACF8F1C8B</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>zantrung</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 192.0 177.0 rectclip
%ADOBeginSubsetFont: XKLAAA+Calibri,Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /XKLAAA+Calibri,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dfd82a000000cc000000606376
7420ba7ecec70000012c000005146670676da1ea42ac0000064000000913
676c79666169ad2400007e0000002d9c68656164ed75069500000f540000
0036686865610da913b300000f8c00000024686d7478bfe10ee000000fb0
000030e86c6f636116cf0c820000409800001eda6d61787019d211ea0000
5f74000000206e616d65ceff477300005f9400000d68707265705fc3ffe0
00006cfc00001102676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204e00002ff4000acff00000001000000004d53202000010000
20840600fe0001c4079e02262000019f0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000005e4000e40465f5e5d5c5b5a59585554535251504f4e4d4c
4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625
2423221f181411100f0d0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045b0
0325456164b050515845441b2121592d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c
4565b02c234445b02b23442d2c4b525845441b2121592d2c01b005251023
208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161011020
3c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0
8051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c
6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840006260
23212d2c4523456023456023456023766818b08062202d2cb00426b00426
b00425b0042545234520b003266062636820b0032661658a2344442d2c20
45b0005458b040442045b04061441b2121592d2c45b1302f4523456160b0
016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325
45695358441b2121591b2121592d2c45b01443b0006063b0016069442d2c
b02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033ff
e0b134201bb3330034005944442d2cb0164358b00326458a586466b01f60
1b64b020606620581b21b04059b001615923586559b02923442310b029e0
1b2121212121592d2cb0164358b004254564b020606620581b21b04059b0
016123586559b0292344b00425b00725082058021b0359b0052510b00425
2046b0042523423cb0072510b006252046b00425b0016023423c2058011b
0059b0052510b00425b029e0b0072510b00625b029e0b00425b007250820
58021b0359b00425b003254348b00625b00325b0016043481b2159212121
212121212d2cb0164358b004254564b020606620581b21b04059b0016123
581b6559b0292344b00525b00825082058021b0359b0042510b005252046
b0042523423cb00425b0072508b0072510b006252046b00425b001602342
3c2058011b0059b0042510b00525b029e0b02920456544b0072510b00625
b029e0b00525b00825082058021b0359b00525b003254348b00425b00725
08b00625b00325b0016043481b2159212121212121212d2c02b004252020
46b004252342b0052508b003254548212121212d2c02b0032520b0042508
b0022543482121212d2c452320451820b00050205823652359236820b040
505821b04059235865598a60442d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d2c
b002435458b0472b1b212121592d2cb002435458b0482b1b21212121592d
2cb002435458b0492b1b212121592d2c208a08234b538a4b515a5823381b
2121592d2c0020b200400325b0062649618b3812342d2c01462346602346
6123201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a
2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2c451868234b51582320452064b04050587c5968
8a6059442d2cb00016b00225b0022501b001233e00b002233eb10102060c
b00a236542b00b234201b001233f00b002233fb10102060cb006236542b0
072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b004
2510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58b0
092b5920b005254ab0042547b004254760b0062547b0806361b00225b000
5558b00325b00725496359b0082558001b0159b00425b0062549b009255c
b009255a58b0092b59b0072546b0806361b0032520b0005558631b215961
2320b0005558b080631b21b08059b0592bb006255c586959b00425202010
b00048233ab0062658001b0159b0052658b003252f598a12233221212d2c
b00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b007
2559b00225b00225070cb005256323b00625636020b94000040063535821
b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1bb0
0426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b
2eb00525b0052507595920b0005558b00525b0052587b00725b007250bb0
092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b00825
b00b254923b00625b0062587b00a2510b00b25c15920b00051b800522378
b00161b00225b00725b0072507b00a25b00d254961b08062b00525b00525
0bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b006
25b0062507b00925b00c2549b0032554b8ffa72379212121212121212121
2121212d2c23b0005458b9400000001bb900004000598ab0005458b94000
00001bb90000400059b05b2b2d2c08b0005458b9400000001bb900004000
590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b
2b2d2cb00426b00426080db00426b00426080db05b2b2d00000100000005
dc29469fc85f5f0f3cf50019080000000000bbeb7ccc00000000ce0d62a1
fa34fdcb0a140836000200090002000000000000000100000600fe0001c4
0aa0fa34fa0b0a140800019a0000000000000000000000000908040e0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000006d7
005200000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0465004c0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000006060046
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003e700470000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000003ed009500000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000041d0051000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000002be003f000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000391007c0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002d800aa00000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000001f000a00000000000000000000000000285
00c300000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000029b00bb00000000000000000000000000000000000000000000
00000260009b000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000033500f70000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002cb005e03ec001103ecffde0455ffcf0000000000000000
00000000000000000000000000000000040e005f040e0020040efff4040e
ffcd000000000000000000000000000000000000000000000000028d0059
038100090373001203ac0004000000000000000000000000000000000000
000000000000039f0055039f0010039f001b039f00140000000000000000
0000000000000000000000000000000002cb008d03ec001103ec000d0428
000f000000000000000000000000000000000000000000000000040e005f
040e0020040e0023040e0018000000000000000000000000000000000000
00000000000001f800cc02b0008402ad008102db00830000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000001f8001402b0ffcc02adffc902dbffcb0000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000001f500300252ffe60249ffdd024affd80000000000000000
0000000000000000000000000000000001f500b2025200680249005f024a
005a00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000046d
00bc00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000046d00bc
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a8015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
015901590159015901590159015901590159015901590159015901590159
0159015901590159015901ac01ac01ac01ac01ac01ac01ac01ac01ac01ac
01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac
01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac01ac
01ac01ac01ac01ac02350235023502350235023502350235023502350235
0235023502350235023502350235023502350235023502c502c502c502c5
02c502c502c502c502c502c502c502c502c502c502c502c502c502c502c5
02c502c502c502c502c502c5031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a03b703b703b703b703b703b703b703b703b703b703b703b703b703b7
03b703b703b703b703b703b703b703b703b703b703b703b703b703b703b7
03b703b703b703b703b703b703b703b703b703b703b703b703b703b703b7
03b703b703b703b703b703b703b703b703b703b703b703b703b703b703b7
03b703b703b703b703b703b703b703b703b703b703b703b703b703b703b7
03b703b703b703b703b703b703b703b703b703b703b703b703b703b703b7
03b703b703b703b703b703b703b703b703b703b703b703b703b703b703b7
03b703b703b703b703b703b703b703b703b703b704380438043804380438
043804380438043804380438043804380438043804380438043804380438
043804380438043804380438043804380438043804380438043804380438
043804380438043804380438043804380438043804380438043804380438
0438043804ac04ac04ac04ac04ac04ac04ac04ac04ac04ac04ac04ac04ac
04ac04ac04ac04ac04ac04ac04ac04ac04ac052705270527052705270527
05270527052705270527052705270527058905890589058905eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb05eb
05eb05eb05eb05eb05eb05eb065006500650065006500650065006b406b4
06b406b406b406b406b406b406b406b406b406b406b406b406b406b406b4
06b406b406b406b406b406b406b406b406b406b406b406b406b406b406b4
06b406b406b406b406b406b406b406b406b406b406b406b406b406b406b4
06b406b406b406b406b406b406b406b406b406b406b406b406b406b406b4
06b406b406b406b406b406b406b406b40710071007100710071007100710
071007100710071007100710071007100710071007100710071007100710
07100710071007100710071007100710071007100710071007100710075d
07da088008ff08ff08ff08ff08ff08ff08ff096109e00a880b060b060b06
0b060b060b060b060b510bcd0c760cf20cf20cf20cf20cf20cf20cf20d50
0d580d600de00de00de00de00de00de00de00e2b0ea90f4f0faf0faf0faf
0faf0faf0faf0faf103b10ea11cc127c127c127c127c127c127c127c1285
128e129712a012a012a012a012a012a012a012a012a012a012a012a012eb
135813f714671467146714671467146714671467146714671467146714b0
152e15c41636163616361636163616361636163f16481651165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a165a165a165a
165a165a165a165a165a165a165a165a165a165a165a165a166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216621662166216621662166216621662166216621662
166216621662166216ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce16ce
16ce16ce16ce16ce16ce16ce16ce0000000100000f6c005b0005005b0002
00020010002f0060000009ed1102000100010000002d0222000000030000
0000006400000000000300000001000e00640000000300000002000c032a
0000000300000003003203040000000300000004001c031a000000030000
0005001803360000000300000006001c034e00000003000000070076036a
0000000300000008002a000e0000000300000009002003e0000000030000
000a02a00064000000030000000b00560400000000030000000c002a0456
000000030000000d02980480000000030000000e006c0718000100000000
0000003207840001000000000001000707b6000100000000000200060919
0001000000000003001909060001000000000004000e0911000100000000
0005000c091f0001000000000006000e092b0001000000000007003b0939
00010000000000080015078b000100000000000900100974000100000000
000a015007b6000100000000000b002b0984000100000000000c001509af
000100000000000d014c09c4000100000000000e00360b10000300010409
0000006400000003000104090001000e00640003000104090002000c032a
0003000104090003003203040003000104090004001c031a000300010409
0005001803360003000104090006001c034e00030001040900070076036a
0003000104090008002a000e0003000104090009002003e0000300010409
000a02a00064000300010409000b00560400000300010409000c002a0456
000300010409000d02980480000300010409000e006c071800a900200032
0030003100330020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000610020
006d006f006400650072006e002000730061006e00730020007300650072
00690066002000660061006d0069006c0079002000770069007400680020
0073007500620074006c006500200072006f0075006e00640069006e0067
00730020006f006e0020007300740065006d007300200061006e00640020
0063006f0072006e006500720073002e0020004900740020006600650061
007400750072006500730020007200650061006c0020006900740061006c
006900630073002c00200073006d0061006c006c00200063006100700073
002c00200061006e00640020006d0075006c007400690070006c00650020
006e0075006d006500720061006c00200073006500740073002e00200049
00740073002000700072006f0070006f007200740069006f006e00730020
0061006c006c006f00770020006800690067006800200069006d00700061
0063007400200069006e002000740069006700680074006c007900200073
006500740020006c0069006e006500730020006f00660020006200690067
00200061006e006400200073006d0061006c006c00200074006500780074
00200061006c0069006b0065002e002000430061006c0069006200720069
002700730020006d0061006e007900200063007500720076006500730020
0061006e006400200074006800650020006e006500770020007200610073
00740065007200690073006500720020007400650061006d002000750070
00200069006e0020006200690067006700650072002000730069007a0065
007300200074006f002000720065007600650061006c0020006100200077
00610072006d00200061006e006400200073006f00660074002000630068
0061007200610063007400650072002e004d006900630072006f0073006f
00660074003a002000430061006c00690062007200690020004900740061
006c0069006300560065007200730069006f006e00200035002e00380036
00430061006c0069006200720069002d004900740061006c006900630043
0061006c0069006200720069002000690073002000610020007400720061
00640065006d00610072006b0020006f006600200074006800650020004d
006900630072006f0073006f00660074002000670072006f007500700020
006f006600200063006f006d00700061006e006900650073002e004c0075
00630028006100730029002000640065002000470072006f006f00740068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f006300740066006f006e00740073006800740074
0070003a002f002f0066006f006e007400660061006200720069006b002e
0063006f006d0059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
00450055004c004100200066006f00720020007400680065002000700072
006f006400750063007400200069006e0020007700680069006300680020
007400680069007300200066006f006e007400200069007300200069006e
0063006c007500640065006400200074006f00200064006900730070006c
0061007900200061006e00640020007000720069006e007400200063006f
006e00740065006e0074002e00200059006f00750020006d006100790020
006f006e006c0079002000280069002900200065006d0062006500640020
007400680069007300200066006f006e007400200069006e00200063006f
006e00740065006e00740020006100730020007000650072006d00690074
007400650064002000620079002000740068006500200065006d00620065
006400640069006e00670020007200650073007400720069006300740069
006f006e007300200069006e0063006c007500640065006400200069006e
0020007400680069007300200066006f006e0074003b00200061006e0064
00200028006900690029002000740065006d0070006f0072006100720069
006c007900200064006f0077006e006c006f006100640020007400680069
007300200066006f006e007400200074006f002000610020007000720069
006e0074006500720020006f00720020006f00740068006500720020006f
00750074007000750074002000640065007600690063006500200074006f
002000680065006c00700020007000720069006e007400200063006f006e
00740065006e0074002e0068007400740070003a002f002f007700770077
002e006d006900630072006f0073006f00660074002e0063006f006d002f
007400790070006f006700720061007000680079002f0066006f006e0074
0073002f00640065006600610075006c0074002e0061007300700078a920
32303133204d6963726f736f667420436f72706f726174696f6e2e20416c
6c205269676874732052657365727665642e43616c696272692069732061
206d6f6465726e2073616e732073657269662066616d696c792077697468
20737562746c6520726f756e64696e6773206f6e207374656d7320616e64
20636f726e6572732e204974206665617475726573207265616c20697461
6c6963732c20736d616c6c20636170732c20616e64206d756c7469706c65
206e756d6572616c20736574732e204974732070726f706f7274696f6e73
20616c6c6f77206869676820696d7061637420696e2074696768746c7920
736574206c696e6573206f662062696720616e6420736d616c6c20746578
7420616c696b652e2043616c696272692773206d616e7920637572766573
20616e6420746865206e65772072617374657269736572207465616d2075
7020696e206269676765722073697a657320746f2072657665616c206120
7761726d20616e6420736f6674206368617261637465722e4d6963726f73
6f66743a2043616c69627269204974616c696356657273696f6e20352e38
3643616c696272692d4974616c696343616c696272692069732061207472
6164656d61726b206f6620746865204d6963726f736f66742067726f7570
206f6620636f6d70616e6965732e4c7563286173292064652047726f6f74
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f6374666f6e7473687474703a2f2f666f6e7466616272696b
2e636f6d596f75206d617920757365207468697320666f6e742061732070
65726d6974746564206279207468652045554c4120666f72207468652070
726f6475637420696e207768696368207468697320666f6e742069732069
6e636c7564656420746f20646973706c617920616e64207072696e742063
6f6e74656e742e20596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e687474703a2f2f7777772e6d6963726f736f66742e636f6d
2f7479706f6772617068792f666f6e74732f64656661756c742e61737078
00>
<b10903b8027ab21e3e1fb80279b21e3e1fb80278b21e0b1fb80277b21e0b
1fb80276b21e3a1fb80275b21e3a1fb80274b21e3e1fb80273b21e3b1fb8
0272b21e3c1fb80271b21e3c1fb80270b21e3c1fb8026fb21e3d1fb8026e
b21e3d1fb8026db21e3e1fb8026cb21e3e1fb8026bb21d411fb8026ab21d
411fb80269b21d421fb80268b21d431fb80267b21d431fb80266b21d431f
b80265b21d431fb80264b21d431fb80263b21d411fb80262b21d421fb802
61b21d421fb80260b21d431fb8025fb21d431fb8025eb21c451fb8025db2
1c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c45
1fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb8
0254b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024f
b21c451fb8024eb21c441fb8024db21c451fb8024cb21c451fb8024bb21c
451fb8024ab21c451fb80249b21c451fb80248b21c451fb80247b21c451f
b80246b21c451fb80245b21c451fb80244b21b491fb80243b21b4a1fb802
42b21b4a1fb80241b21b4a1fb80240b21b4b1fb8023fb21b4b1fb8023eb2
1b4c1fb8023db21b4c1fb8023cb21b4c1fb8023bb21b4c1fb8023ab21b4c
1fb80253b21b4c1fb80239b21b491fb80238b21b491fb80237b21b4a1fb8
0236b21b4a1fb80235b21b4a1fb80234b21b4b1fb80233b21b4b1fb80232
b21b4c1fb80231b21b4c1fb80230b21b4c1fb8022fb21b4c1fb8022eb21b
4c1fb8022db21b491fb8022cb21b4a1fb8022bb21b4b1fb8022ab21b4c1f
b80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb802
25b21b4a1fb80224b21b4a1fb80223b21b4b1fb80222b21b4c1fb80221b2
1b4c1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21a4e
1fb8021cb21a4e1fb8021bb21a4f1fb8021ab21a4f1fb80219b21a4f1fb8
0218b21a4e1fb80217b21a4e1fb80216b21a4f1fb80215b21a4f1fb80214
b21a4f1fb80213b21a4e1fb80212b21a4e1fb80211b21a4f1fb80210b21a
4e1fb8020fb21a4e1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4f1f
b8020bb21a4f1fb8020ab21a4f1fb80209b219501fb80208b219511fb802
07b219511fb80206b219511fb80205b219511fb80204b219501fb80203b2
19511fb80202b219511fb80201b219511fb80200b219511fb801ffb21951
1fb801feb219511fb801fdb219501fb801fcb219511fb801fbb219511fb8
01fab219511fb801f9b219511fb801f8b219511fb801f7b219511fb801f6
b218531fb801f5b218531fb801f4b218541fb801f3b218541fb801f2b218
541fb801f1b218541fb801f0b218531fb801efb218531fb801eeb218541f
b801edb218541fb801ecb218541fb801ebb218541fb801eab218531fb801
e9b218531fb801e8b218531fb801e7b218541fb801e6b218541fb801e5b2
18541fb801e4b218541fb801e3b218531fb801e2b218531fb801e1b21854
1fb801e0b218541fb801dfb218541fb801deb218541fb801ddb217561fb8
01dcb217561fb801dbb217571fb801dab217571fb801d9b217561fb801d8
b217561fb801d7b217571fb801d6b217571fb801d5b217571fb801d4b217
571fb801d3b217561fb801d2b217571fb801d1b217561fb801d0b217561f
b801cfb217571fb801ceb217571fb801cdb217571fb801ccb217571fb801
cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b2
17571fb801c6b217571fb801c5b217571fb801c4b2163e1fb801c3b2163f
1fb801c2b2163f1fb801c1b2165b1fb801c0b2165b1fb801bfb2165b1fb8
01beb2165b1fb801bdb2165b1fb801bcb2165b1fb801bbb2165b1fb801ba
b2163f1fb801b9b2163f1fb801b8b2165b1fb801b7b2165b1fb801b6b216
5b1fb801b5b2165b1fb801b4b2165b1fb801b3b2165b1fb801b2b2165b1f
b801b1b2163f1fb801b0b2163e1fb801afb2163f1fb801aeb2163f1fb801
adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2165b1fb801a9b2
165b1fb801a8b2163e1fb801a7b2163f1fb801a6b2165b1fb801a5b2165b
1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb8
01a0b2165b1fb8019fb2165b1fb8019eb215621fb8019db215621fb8019c
b215631fb8019bb215641fb8019ab215651fb80199b215661fb80198b215
661fb80197b215661fb80196b215661fb80195b215661fb80194b215661f
b80193b215661fb80192b215611fb80191b215621fb80190b215631fb801
8fb215641fb8018eb215641fb8018db215651fb8018cb215661fb8018bb2
15661fb8018ab215631fb80189b215641fb80188b215551fb80187b21561
1fb80186b215621fb80185b215621fb80184b215631fb80183b215651fb8
0182b215661fb80181b215661fb80180b215661fb8017fb215661fb8017e
b215661fb8017db215661fb8017cb215661fb8017bb215661fb8017ab215
451fb80179b215611fb80178b215621fb80177b215621fb80176b215631f
b80175b215641fb80174b215641fb80173b215651fb80172b215661fb801
71b215661fb80170b215661fb8016fb215661fb8016eb215661fb8016db2
15661fb8016cb215661fb8016bb215551fb8016ab215451fb80169b21545
1fb80168b215361fb80167b215361fb80166b214821fb80165b214561fb8
0164b2147f1fb80163b214551fb80162b214561fb80161b214401fb80160
b214551fb8015fb214561fb8015eb2147e1fb8015db214831fb8015cb214
851fb8015bb2133d1fb8015ab2131e1fb80159b2131e1fb80158b2130a1f
b80157b2130a1fb80156b2130b1fb80155b2133a1fb80154b2133a1fb801
53b2133a1fb80152b2133b1fb80151b2133c1fb80150b2133c1fb8014fb2
12451fb8014eb212461fb8014db212461fb8014cb212451fb8014bb21245
1fb8014ab212461fb80149b212461fb80148b212461fb80147b212441fb8
0146b212451fb80145b212461fb80144b212461fb80143b211471fb80142
b211571fb80141b211581fb80140b211591fb8013fb2115a1fb8013eb211
5a1fb8013db2115b1fb8013cb2115b1fb8013bb2115b1fb8013ab2115b1f
b80139b2112b1fb80138b2112c1fb80137b211391fb80136b211391fb801
35b211461fb80134b211471fb80133b211471fb80132b211551fb80131b2
11551fb80130b211561fb8012fb211561fb8012eb211571fb8012db21157
1fb8012cb211581fb8012bb211591fb8012ab211591fb80129b2115a1fb8
0128b2115a1fb80127b2115b1fb80126b2115b1fb80125b2115b1fb80124
b2115b1fb80123b211591fb80122b2115a1fb80121b211391fb80120b211
471fb8011fb211561fb8011eb211561fb8011db211591fb8011cb211591f
b8011bb2115b1fb8011ab2115b1fb80119b2115b1fb80118b211561fb801
17b211561fb80116b211571fb80115b211571fb80114b211581fb80113b2
115a1fb80112b2115a1fb80111b2115b1fb80110b2115b1fb8010fb2115b
1fb8010eb2115b1fb8010db2115a1fb8010cb2115b1fb8010bb2105d1fb8
010ab2105e1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106
b2105f1fb80105b2105d1fb80104b2105e1fb80103b2105f1fb80102b210
5f1fb80101b2105f1fb8010040ff105f1fff105d1ffe105f1ffd105f1ffc
105f1ffb105f1ffa105d1ff9105e1ff8105f1ff7105f1ff6105f1ff5105f
1ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed
0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60f62
1fe50f621fe40f641fe30f621fe20f621fe10f631fe00f641fdf0f641fde
0f641fdd0f641fdc0f641fdb0f641fda0e671fd90e681fd80e681fd70e68
1fd60e681fd50e671fd40e681fd30e681fd20e681fd10e671fd00e681fcf
0e681fce0e681fcd0e681fcc0e681fcb0e681fca0e681fc90e681fc80d6b
1fc70d6c1fc60d2a1fc50d6c1fc40d2c1fc30d6b1fc20d6c1fc10d6d1f40
ffc00d6a1fbf0d691fbe0d681fbd0d6b1fbc0d311fbb0d311fba0d311fb9
0c711fb80c721fb70c731fb60c741fb50c741fb40c741fb30c731fb20c74
1fb10d311fb00d311faf0d311fae0d311fad0d311fac0d311fab0d311faa
0d311fa90b7e1fa80b7a1fa70b791fa60b7a1fa50b7c1fa40b7d1fa30b7e
1fa20b7e1fa10b7e1fa00b7e1f9f0b7e1f9e0b7e1f9d0b7e1f9c0b7e1f9b
0b7e1f9a0b2d1f990b2d1f980aa71f970aa51f960aa71f950aa71f940aa7
1f930aa71f920a681f910a821f900a9b1f8f0a9d1f8e0a9f1f8d0aa71f8c
0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab7d
550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955
775578ab7755ba028900660288403c5576ab755504751475747503f47501
ab750144750130750102007510752075030c7455725573ab725500725072
8072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d
104671556f5570ab6f556e666d556a03251f6938675568ab675566386455
65ab645563386255613860555f385d555eab5d555c385a555bab5a555938
58555703251f5638545555ab54555338515552ab51554f384e554e03251f
4d384b554cab4b554a38485549ab4855473846554503381f001c101c201c
0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b
03120f1a1f1a02290f1901434f19016f197f198f19030f18cf1802401829
2c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b316
4d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15
010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f
02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d
1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b
02400b3f4346400b2d30460003012001010001100120010308b8ffc0b301
151f46b80100b316010501b80190b154532b2b4bb807ff524bb008505bb0
0188b02553b00188b040515ab00688b000555a5b58b101018e59b1010243
54b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb080
5358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b
2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374
755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b
2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b185f5e000000>
[11677 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>XKLAAA+Calibri,Italic AddT42Char 
2 3030 842 <000200bbfff6027c055e0015002f003b4014150b16230b1b231628042b1e
0b15000a0410052bb80152b41e4d104628ba027f028000582b2b3f3ffdce
11173911121739012f2f3311333130010e0323222e0237133e0333321e02
0703140e0207060623222e0235343e0237363633321e0201a9010a141d15
161a0f0402ac030c18241a1b22130403df060b0f0b0e2c231a231307050a
100a102a211d2413070175080c080404080c0803ba0d120b05050c120cfb
6d0e2727230a0f0e080f180f0d2628250b100b091018>XKLAAA+Calibri,Italic AddT42Char 
2 3432 919 <000200f703660352057500130027003c410b0014017e001e001f020f0027
0000017e000a0013020f40090b2705192447104728ba027f028000582b2b
3f3fddc4012fd6eddded10fddded3130010e0323222e0237133e03333216
07010e0323222e0237133e033332160702d9010911181212170d04014801
0b172217302304fe280109101a1212170c040148010b1722173023040386
080c080404080c0801cf080c08041010fe31080c080404080c0801cf080c
08041010>XKLAAA+Calibri,Italic AddT42Char 
2 8030 1005 <0001005f000003530517002e008dba027d027e00582bb10102435558b900
30ffc040180f024d0030010f032a142b1320141314001a0b2a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd111239012f
c4cd393911331133113331305f5e5d2b1b400a0030010f032a25081514b8
014ab325522b13b80100b3400854282b183f1a4dfdc43ffdcd1112393130
015f5e5d5925140e042321222635343e04332113050606262635343e0237
253e0333321e02070333321603530305080c0f09fd5b0c0f0305090c100a
010ec3fee710140d05050b120e0151050d121911191f110301e2ea0e0b66
06151716130b141105131618120d03ce94080506100c0b21211e08bf0304
040104070b06fb8f1300>XKLAAA+Calibri,Italic AddT42Char 
2 8310 1006 <00010020000003ca0521004300a6ba027d027e00582bb10102435558b900
45ffc040090f024d0045010f0340b80230b71212270027000d1ab80264b2
380d2ebb01300024001f012c40091a133f030833531240b80126b3400854
282b183f1a4dfdc13f121739fdd4ed012fd4ed1239392f2f3910ed31305f
5e5d2b1bb50045010f032ebb01300024001f012c40091a133f0308335312
40b80126b3400854282b183f1a4dfdc13f121739fdd4ed3130015f5e5d59
25140e042321222e0235343e0237013e0535342e0223220e022322263534
3e04373e0333321e0215140e04070721321603520306090d100afd350d12
0a05030c1815014d4e714d2e1a080f254434396854390b0a0c030307090b
070b415c703c607e491d0c233f658f63fa0228110e6906161718120c060b
0f0a0a20262712012444776757483b171837302022292314130813161614
13070b2422193652602b29565f6a7b8f54d61900>XKLAAA+Calibri,Italic AddT42Char 
2 8660 1007 <00010023ffed03c30521005a00d9ba027d027e00582bb10102435558b900
5cffc040090f024d005c010f0320b80257400d0055290041290000294103
0f36b80254b2500f0cbb0136001600460126b63e163e163e1b39b8010440
0a4b5531ec2525074b531bb80104b3400756282b183f1a4ded3f12392fed
3910ed1139392f2f10ed10ed012fd4ed1217392f2f2f11123910ed31305f
5e5d2b1bb5005c010f030cbb0136001600460126b63e163e163e1b39b801
04400a4b5531ec2525074b531bb80104b3400756282b183f1a4ded3f1239
2fed3910ed1139392f2f10ed10ed3130015f5e5d5901140e0423222e0227
262635343e0433321e0233323e0235342e022323222635343e043333323e
0235342623220e0223222635343e02373e0333321e0215140e0207151e03
038019365375965f32594f411a0f0d020406090d08092f4c6743547b5027
1d3f65478b10110306090d100b714a7c5932515e3968543b0c090a04090f
0a0b405c733d4f774e272d537244425d3a1a019d316660553f250c151d11
0919100615181b150d1f251f345163312846331e111307161516120a2d4f
683b4752232924110f081e22200a0b2523192545633d467b60450f020731
4757>XKLAAA+Calibri,Italic AddT42Char 
2 9112 1008 <00020018fffa03c30514002e003200c5ba027d027e00582bb10102435558
b90034ffc040300f024d0034010f033214132f132b08092a0909132a2f2f
20311f1f1a202f132f132f001a2f302a0314200e25522b1f32b801044009
4009130e140e5508282b182f3f2f1239391a4dfd32c43f1239121739012f
cd39392f2f123912391133113311331133107d87c4c41087c4c43130015f
5e5d2b1b40110034010f032f302a0314200e25522b1f32b8010440094009
130e140e5508282b182f3f2f1239391a4dfd32c43f12391217393130015f
5e5d5901140e042323030e0323222e02371321222635343e0437013e0333
321e0207033332160323012103c30306090d10099236020a162118191f11
060335fdea140f0205080a0d0902700617212e1f212f1e0d01a6920f0cc9
02fdd501a2019108141817120bfef0080b080404080b080110121207161a
1d1c1a0b0313080c080305080d09fcc61502d2fd4300>XKLAAA+Calibri,Italic AddT42Char 
2 336 68 <00010052fffa06c4050e003a00b3ba027d027e00582bb101024355584042
2c21140d2e2e132d000a1514202d0a0a10208f2d01302d010f2d010b032d
2d3a2f0c10162034512e2d0d13000a16202d0c15142c2f213a0e1b26511b
5510550555282b183f3f3f3f12173911333f012f332bc401323239192f5f
5e5d5d5d112b39182f11123939110133113333113311333331301b401d34
512e2d0d13000a16202d0c15142c2f213a0e1b26511b5510550555282b18
3f3f3f3f12173911333f313059250e0323222e0237132301060623222627
0323030e0323222e0237133e033333321e02171333013e033333321e0207
05d3020a1421191820120502e102fd4f082a28292201d702e1020a142119
1820110502ed0412181b0e64202b1d1004bb0502420f1e252d1c720f1811
050419070c070505070c070467fb950e0d0f0c046cfb98070c070505070c
0704a7141e13090d1a281cfc5903a71b271b0e09131d1500>XKLAAA+Calibri,Italic AddT42Char 
2 1588 282 <00020051ffed0439056d002c003f0087ba027f028000582bb10102435558
400a212d3f222c003f092237b8021e401a15222c032746212d3f09080006
0e30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f12393901
2fedc4392f33327d870ec4c431301b4019222c032746212d3f090800060e
30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f1239393130
5925060623222e0237370e0323222e0435343e0433321e0217133e033332
1e020701262623220e0415141633323e0237032d03242a151a100502200d
445d723b3b573b25150716304b6a8b582b4c3e341566010a142019181f12
0502fed62f6d443555443120104249376f604a1219110e04070b09a8214b
3f291f3445494a1f3a90918b6b4213212e1901fe070d070505070d07fd62
454831526a716e2e61673c6a9257>XKLAAA+Calibri,Italic AddT42Char 
2 1902 396 <0001003ffffa02f203ca0033006cba027f028000582bb10102435558400a
2811111d121c001d1c0cb801184010402d4a121c11281d2706172249174c
282b183f3f1217393f1a4ded012f2fc411331133113331301bb9000c0118
4010402d4a121c11281d2706172249174c282b183f3f1217393f1a4ded31
305901140e0423222e0223220e0207030e0323222e0237133e0333321e02
07073e0333321e02171602f20304080c0d080813171e1422595647114f02
0a142118191f110502b3010a141d14151b0f040121173f4a512711231e17
0606039c04171e201b12070a073b688e53fe6f080b080404080b08038507
0c080303080c07a4294c3922050709060600>XKLAAA+Calibri,Italic AddT42Char 
2 2160 448 <0001007cfffa03a303bc00310056ba027f028000582bb10102435558b900
210187b2121628bb021f0000002001fb400b40162d49220d1b490d4c282b
183f3f12393f012f1a4dedd4ed10dded31301b40092d49220d1b490d4c28
2b183f3f12393f313059011406070e03070e0323222e022703262635343e
0233321e02171315373e03373e0333321e0203a30604255d718750071219
20161f2615090185010108121f1a1a201106016c053b62544b27030b1523
1a181e110703a50a150b6ddfddd5630b0c070204080e0a03550b11070d0e
080303070d09fd1a0c0659a7b2c476090d0703030509>XKLAAA+Calibri,Italic AddT42Char 
2 9686 1031 <0001ffccff360234024c0037003eb9003401ca40090e0e091f001f00092e
b8020b400c140917bd29790d34b0067a28ba0281028200582b2b3ffdc13f
ed012fd4ed1139392f2f123910ed313005140e022321222635343e023737
3e0335342623220e0223222635343e02373e0333321e0215140e02070721
321601ef04090f0bfe29160f050c120fbf3b512f132d34254032230b060a
04070a070b303e48213f5635171f426c4e7f01430a0872091d1d150f100b
1a1d1c0c9c3052453d1c24301416140c100a1a1a16070b17150d1f334020
2e595d683d660e00>XKLAAA+Calibri,Italic AddT42Char 
2 9482 1016 <ffff008402d102ec05e70207040700b8039b>XKLAAA+Calibri,Italic AddT42Char 
2 9904 1032 <0001ffc9ff29022a024c00530063b9001a01e1400d004e23003a23000023
3a030b2eb801c9400d490b4e282940161a4829a7281fb8ffc0400f161948
1f1f0533ad447915ae057c28ba0281028200582b2b3fed3fed12392f002b
2bed002b2b39012fd4ed1217392f2f2f11123910ed313025140e02232226
27262635343e0233321e0233323e0235342e022323222635343e02333332
3e0235342e0223220e02232235343e02373e0333321e0215140e0207151e
0302013059815138682b090905090e09091b2b3d2c2744331d1128413049
0b0a060c0e09452a4935200916271e25423625090e05090b06082b3c4927
3c53341720344727273926132d395f46261417060e0f071e1d1611121011
22342216251c0f100c0d1d1810122438240f1c160e131713180a19191706
0815140d1b2e3c212f4b39240802031d2b33>XKLAAA+Calibri,Italic AddT42Char 
2 9500 1017 <ffff008102c402e205e70207040800b8039b>XKLAAA+Calibri,Italic AddT42Char 
2 9536 1030 <00010014ff3001890249001f0035400f151f1f0b000a0b0f0a000a1f0305
0bb8010db41a78057b28ba0281028200582b2b3f3fed121739012fc42f11
33113312393130170e0323222e02371307062635343e0237373e0333321e
0215f20209121d1413191006017ca21a0f03080e0ad1050b0f151014190d
03b80709050302060907026c4e0b0c100c1b1914066f0303020103040704
>XKLAAA+Calibri,Italic AddT42Char 
2 9464 1015 <ffff00cc02cb024105e40207040600b8039b>XKLAAA+Calibri,Italic AddT42Char 
XKLAAA+Calibri,Italic /CharStrings get begin
/.notdef 0 def
/exclam 842 def
/quotedbl 919 def
/one 1005 def
/two 1006 def
/three 1007 def
/four 1008 def
/M 68 def
/d 282 def
/r 396 def
/v 448 def
/twosuperior 1016 def
/threesuperior 1017 def
/onesuperior 1015 def
end
XKLAAA+Calibri,Italic /Encoding get
dup 32 /.notdef put
dup 33 /exclam put
dup 34 /quotedbl put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 77 /M put
dup 100 /d put
dup 114 /r put
dup 118 /v put
dup 178 /twosuperior put
dup 179 /threesuperior put
dup 185 /onesuperior put
pop
end
%ADOEndSubsetFont
[/N5/XKLAAA+Calibri,Italic 1 TZG
q
0.0 0.0 m
192.0 0.0 l
192.0 177.0 l
0.0 177.0 l
h
W
n
0.75075 w
1 J
1 j
n
160.12 79.75 m
160.12 131.13 l
[/DeviceGray] cs 0.0 sc
S
n
159.38 79.563 m
111.56 28.375 l
S
n
111.56 28.375 m
111.66 130.94 l
S
n
111.56 28.375 m
63.75 28.375 l
S
n
111.66 130.94 m
63.75 28.375 l
S
n
111.56 28.375 m
63.375 130.94 l
S
n
111.56 28.375 m
31.219 80.125 l
S
n
111.66 130.94 m
31.219 80.125 l
S
n
31.219 80.125 m
63.75 28.375 l
S
n
63.375 130.94 m
31.219 80.125 l
S
n
63.375 130.94 m
63.75 28.375 l
S
n
111.66 130.94 m
159.38 79.562 l
S
n
160.12 131.13 m
111.66 130.94 l
S
n
160.12 28.937 m
111.56 28.375 l
S
n
20.531 80.125 m
20.531 86.028 25.316 90.813 31.219 90.813 c
37.121 90.813 41.906 86.028 41.906 80.125 c
41.906 74.222 37.121 69.438 31.219 69.438 c
25.316 69.438 20.531 74.222 20.531 80.125 c
h
1.0 sc
eofill
2 J
0 j
2.0 M
n
20.531 80.125 m
20.531 86.028 25.316 90.813 31.219 90.813 c
37.121 90.813 41.906 86.028 41.906 80.125 c
41.906 74.222 37.121 69.438 31.219 69.438 c
25.316 69.438 20.531 74.222 20.531 80.125 c
h
0.0 sc
S
28.975 73.05 m
/N5 9.025 Tf
(r) show
32.075 71.8 m
/N5 6.025 Tf
(1) show
23.45 74.85 m
/N5 18.075 Tf
(v) show
32.15 80.5 m
/N5 9.05 Tf
(d) show
36.8 79.225 m
/N5 6.025 Tf
(3) show
n
52.687 130.94 m
52.687 136.84 57.472 141.63 63.375 141.63 c
69.278 141.63 74.063 136.84 74.063 130.94 c
74.063 125.03 69.278 120.25 63.375 120.25 c
57.472 120.25 52.687 125.03 52.687 130.94 c
h
1.0 sc
eofill
n
52.687 130.94 m
52.687 136.84 57.472 141.63 63.375 141.63 c
69.278 141.63 74.063 136.84 74.063 130.94 c
74.063 125.03 69.278 120.25 63.375 120.25 c
57.472 120.25 52.687 125.03 52.687 130.94 c
h
0.0 sc
S
60.6 123.9 m
/N5 9.05 Tf
(r) show
63.7 122.62 m
/N5 6.025 Tf
(1) show
55.075 125.7 m
/N5 18.075 Tf
(v) show
64.325 131.9 m
/N5 9.05 Tf
(d) show
68.975 130.63 m
/N5 6.025 Tf
(1) show
n
53.062 28.375 m
53.062 34.278 57.847 39.062 63.75 39.062 c
69.653 39.062 74.438 34.278 74.438 28.375 c
74.438 22.472 69.653 17.687 63.75 17.687 c
57.847 17.687 53.062 22.472 53.062 28.375 c
h
1.0 sc
eofill
n
53.062 28.375 m
53.062 34.278 57.847 39.062 63.75 39.062 c
69.653 39.062 74.438 34.278 74.438 28.375 c
74.438 22.472 69.653 17.687 63.75 17.687 c
57.847 17.687 53.062 22.472 53.062 28.375 c
h
0.0 sc
S
61.725 21.65 m
/N5 9.025 Tf
(r) show
64.825 20.4 m
/N5 6.025 Tf
(1) show
56.2 23.45 m
/N5 18.075 Tf
(v) show
65.475 29.1 m
/N5 9.05 Tf
(d) show
70.1 27.825 m
/N5 6.025 Tf
(2) show
n
100.97 130.94 m
100.97 136.84 105.75 141.63 111.66 141.63 c
117.56 141.63 122.34 136.84 122.34 130.94 c
122.34 125.03 117.56 120.25 111.66 120.25 c
105.75 120.25 100.97 125.03 100.97 130.94 c
h
1.0 sc
eofill
n
100.97 130.94 m
100.97 136.84 105.75 141.63 111.66 141.63 c
117.56 141.63 122.34 136.84 122.34 130.94 c
122.34 125.03 117.56 120.25 111.66 120.25 c
105.75 120.25 100.97 125.03 100.97 130.94 c
h
0.0 sc
S
109.72 124.07 m
/N5 9.025 Tf
(r) show
112.82 122.82 m
/N5 6.025 Tf
(3) show
104.23 125.87 m
/N5 18.075 Tf
(v) show
112.9 131.52 m
/N5 9.05 Tf
(d) show
117.55 130.25 m
/N5 6.025 Tf
(3) show
n
149.44 131.13 m
149.44 137.03 154.22 141.81 160.12 141.81 c
166.03 141.81 170.81 137.03 170.81 131.13 c
170.81 125.22 166.03 120.44 160.12 120.44 c
154.22 120.44 149.44 125.22 149.44 131.13 c
h
1.0 sc
eofill
n
149.44 131.13 m
149.44 137.03 154.22 141.81 160.12 141.81 c
166.03 141.81 170.81 137.03 170.81 131.13 c
170.81 125.22 166.03 120.44 160.12 120.44 c
154.22 120.44 149.44 125.22 149.44 131.13 c
h
0.0 sc
S
157.72 124.07 m
/N5 9.025 Tf
(r) show
160.83 122.82 m
/N5 6.025 Tf
(3) show
152.23 125.87 m
/N5 18.075 Tf
(v) show
161.48 132.08 m
/N5 9.025 Tf
(d) show
166.13 130.83 m
/N5 6.025 Tf
(1) show
n
148.69 79.563 m
148.69 85.465 153.47 90.25 159.38 90.25 c
165.28 90.25 170.06 85.465 170.06 79.563 c
170.06 73.66 165.28 68.875 159.38 68.875 c
153.47 68.875 148.69 73.66 148.69 79.563 c
h
1.0 sc
eofill
n
148.69 79.563 m
148.69 85.465 153.47 90.25 159.38 90.25 c
165.28 90.25 170.06 85.465 170.06 79.563 c
170.06 73.66 165.28 68.875 159.38 68.875 c
153.47 68.875 148.69 73.66 148.69 79.563 c
h
0.0 sc
S
157.72 73.05 m
/N5 9.025 Tf
(r) show
160.83 71.8 m
/N5 6.025 Tf
(3) show
152.23 74.85 m
/N5 18.075 Tf
(v) show
161.48 80.5 m
/N5 9.05 Tf
(d) show
166.13 79.225 m
/N5 6.025 Tf
(2) show
n
149.44 28.937 m
149.44 34.84 154.22 39.625 160.12 39.625 c
166.03 39.625 170.81 34.84 170.81 28.937 c
170.81 23.035 166.03 18.25 160.12 18.25 c
154.22 18.25 149.44 23.035 149.44 28.937 c
h
1.0 sc
eofill
n
149.44 28.937 m
149.44 34.84 154.22 39.625 160.12 39.625 c
166.03 39.625 170.81 34.84 170.81 28.937 c
170.81 23.035 166.03 18.25 160.12 18.25 c
154.22 18.25 149.44 23.035 149.44 28.937 c
h
0.0 sc
S
157.72 21.475 m
/N5 9.05 Tf
(r) show
160.83 20.2 m
/N5 6.025 Tf
(2) show
152.23 23.275 m
/N5 18.075 Tf
(v) show
161.48 29.475 m
/N5 9.05 Tf
(d) show
166.13 28.2 m
/N5 6.025 Tf
(1) show
n
100.87 28.375 m
100.87 34.278 105.66 39.062 111.56 39.062 c
117.47 39.062 122.25 34.278 122.25 28.375 c
122.25 22.472 117.47 17.687 111.56 17.687 c
105.66 17.687 100.87 22.472 100.87 28.375 c
h
1.0 sc
eofill
n
100.87 28.375 m
100.87 34.278 105.66 39.062 111.56 39.062 c
117.47 39.062 122.25 34.278 122.25 28.375 c
122.25 22.472 117.47 17.687 111.56 17.687 c
105.66 17.687 100.87 22.472 100.87 28.375 c
h
0.0 sc
S
109.72 21.65 m
/N5 9.025 Tf
(r) show
112.82 20.4 m
/N5 6.025 Tf
(2) show
104.23 23.45 m
/N5 18.075 Tf
(v) show
113.48 29.1 m
/N5 9.05 Tf
(d) show
118.12 27.825 m
/N5 6.025 Tf
(2) show
60.575 143.88 m
/N5 12.05 Tf
(1) show
29.525 93.175 m
(4) show
47.025 31.925 m
(2) show
110.27 144.9 m
(4) show
113.32 39.95 m
(4) show
157.95 40.95 m
(1) show
152.3 91.925 m
(3) show
157.7 143.88 m
(1) show
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
