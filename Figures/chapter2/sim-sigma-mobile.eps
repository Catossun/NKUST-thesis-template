%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows Vista.
%%Title: C:\Users\mafiaxanha\Desktop\thesis\sim-sigma-mobile.eps
%%CreationDate: 11/18/2015  14:48:43
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    93   233   516   557
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    93   233   516   557
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1116 6684 csm

    0     0  5084  3879 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5085 3880 rf
6 w
0 3161 3940 0 0 -3161 661 3452 4 MP
PP
-3940 0 0 3161 3940 0 0 -3161 661 3452 5 MP stroke
4 w
DO
0 sg
 661 3452 mt  661  291 L
 661  291 mt  661  291 L
1153 3452 mt 1153  291 L
1153  291 mt 1153  291 L
1646 3452 mt 1646  291 L
1646  291 mt 1646  291 L
2138 3452 mt 2138  291 L
2138  291 mt 2138  291 L
2631 3452 mt 2631  291 L
2631  291 mt 2631  291 L
3123 3452 mt 3123  291 L
3123  291 mt 3123  291 L
3616 3452 mt 3616  291 L
3616  291 mt 3616  291 L
4108 3452 mt 4108  291 L
4108  291 mt 4108  291 L
4601 3452 mt 4601  291 L
4601  291 mt 4601  291 L
 661 3452 mt 4601 3452 L
4601 3452 mt 4601 3452 L
 661 3100 mt 4601 3100 L
4601 3100 mt 4601 3100 L
 661 2749 mt 4601 2749 L
4601 2749 mt 4601 2749 L
 661 2398 mt 4601 2398 L
4601 2398 mt 4601 2398 L
 661 2047 mt 4601 2047 L
4601 2047 mt 4601 2047 L
 661 1695 mt 4601 1695 L
4601 1695 mt 4601 1695 L
 661 1344 mt 4601 1344 L
4601 1344 mt 4601 1344 L
 661  993 mt 4601  993 L
4601  993 mt 4601  993 L
 661  642 mt 4601  642 L
4601  642 mt 4601  642 L
 661  291 mt 4601  291 L
4601  291 mt 4601  291 L
SO
6 w
 661  291 mt 4601  291 L
 661 3452 mt 4601 3452 L
4601 3452 mt 4601  291 L
 661 3452 mt  661  291 L
 661 3452 mt 4601 3452 L
 661 3452 mt  661  291 L
 661 3452 mt  661 3412 L
 661  291 mt  661  330 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 595 3597 mt 
(30) s
1153 3452 mt 1153 3412 L
1153  291 mt 1153  330 L
1087 3597 mt 
(45) s
1646 3452 mt 1646 3412 L
1646  291 mt 1646  330 L
1580 3597 mt 
(60) s
2138 3452 mt 2138 3412 L
2138  291 mt 2138  330 L
2072 3597 mt 
(75) s
2631 3452 mt 2631 3412 L
2631  291 mt 2631  330 L
2565 3597 mt 
(90) s
3123 3452 mt 3123 3412 L
3123  291 mt 3123  330 L
3023 3597 mt 
(105) s
3616 3452 mt 3616 3412 L
3616  291 mt 3616  330 L
3516 3597 mt 
(120) s
4108 3452 mt 4108 3412 L
4108  291 mt 4108  330 L
4008 3597 mt 
(135) s
4601 3452 mt 4601 3412 L
4601  291 mt 4601  330 L
4501 3597 mt 
(150) s
 661 3452 mt  700 3452 L
4601 3452 mt 4561 3452 L
 493 3496 mt 
(25) s
 661 3100 mt  700 3100 L
4601 3100 mt 4561 3100 L
 493 3144 mt 
(30) s
 661 2749 mt  700 2749 L
4601 2749 mt 4561 2749 L
 493 2793 mt 
(35) s
 661 2398 mt  700 2398 L
4601 2398 mt 4561 2398 L
 493 2442 mt 
(40) s
 661 2047 mt  700 2047 L
4601 2047 mt 4561 2047 L
 493 2091 mt 
(45) s
 661 1695 mt  700 1695 L
4601 1695 mt 4561 1695 L
 493 1739 mt 
(50) s
 661 1344 mt  700 1344 L
4601 1344 mt 4561 1344 L
 493 1388 mt 
(55) s
 661  993 mt  700  993 L
4601  993 mt 4561  993 L
 493 1037 mt 
(60) s
 661  642 mt  700  642 L
4601  642 mt 4561  642 L
 493  686 mt 
(65) s
 661  291 mt  700  291 L
4601  291 mt 4561  291 L
 493  335 mt 
(70) s
 661  291 mt 4601  291 L
 661 3452 mt 4601 3452 L
4601 3452 mt 4601  291 L
 661 3452 mt  661  291 L
gs 661 291 3941 3162 rc
18 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
493 -269 492 -315 493 -210 492 -231 493 -183 492 -188 493 -164 492 -93 
661 2052 9 MP stroke
gr

18 w
c8
0 j
-55 95 -55 -95 110 0 606 2084 4 MP
1 sg
gs
PP
gr
c8
DP
-55 95 -55 -95 110 0 1098 1991 4 MP
1 sg
gs
PP
gr
c8
DP
-55 95 -55 -95 110 0 1591 1827 4 MP
1 sg
gs
PP
gr
c8
DP
-55 95 -55 -95 110 0 2083 1639 4 MP
1 sg
gs
PP
gr
c8
DP
-55 95 -55 -95 110 0 2576 1456 4 MP
1 sg
gs
PP
gr
c8
DP
-55 95 -55 -95 110 0 3068 1225 4 MP
1 sg
gs
PP
gr
c8
DP
-55 95 -55 -95 110 0 3561 1015 4 MP
1 sg
gs
PP
gr
c8
DP
-55 95 -55 -95 110 0 4053 700 4 MP
1 sg
gs
PP
gr
c8
DP
-55 95 -55 -95 110 0 4546 431 4 MP
1 sg
gs
PP
gr
c8
DP
gs 661 291 3941 3162 rc
DA
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
493 -247 492 -295 493 -207 492 -184 493 -165 492 -162 493 -167 492 -78 
661 2389 9 MP stroke
gr

c9
DA
SO
0 -76 -76 0 0 76 76 0 623 2351 5 MP
1 sg
gs
PP
gr
c9
DP
0 -76 -76 0 0 76 76 0 1115 2273 5 MP
1 sg
gs
PP
gr
c9
DP
0 -76 -76 0 0 76 76 0 1608 2106 5 MP
1 sg
gs
PP
gr
c9
DP
0 -76 -76 0 0 76 76 0 2100 1944 5 MP
1 sg
gs
PP
gr
c9
DP
0 -76 -76 0 0 76 76 0 2593 1779 5 MP
1 sg
gs
PP
gr
c9
DP
0 -76 -76 0 0 76 76 0 3085 1595 5 MP
1 sg
gs
PP
gr
c9
DP
0 -76 -76 0 0 76 76 0 3578 1388 5 MP
1 sg
gs
PP
gr
c9
DP
0 -76 -76 0 0 76 76 0 4070 1093 5 MP
1 sg
gs
PP
gr
c9
DP
0 -76 -76 0 0 76 76 0 4563 846 5 MP
1 sg
gs
PP
gr
c9
DP
DA
gs 661 291 3941 3162 rc
DD
/c10 { 1.000000 0.000000 1.000000 sr} bdef
c10
493 -206 492 -189 493 -168 492 -115 493 -155 492 -71 493 -153 492 -23 
661 3226 9 MP stroke
gr

c10
DD
SO
1 sg
  48   48  661 3226 PO
  48   48 1153 3203 PO
  48   48 1646 3050 PO
  48   48 2138 2979 PO
  48   48 2631 2824 PO
  48   48 3123 2709 PO
  48   48 3616 2541 PO
  48   48 4108 2352 PO
  48   48 4601 2146 PO
c10
  48   48  661 3226 FO
  48   48 1153 3203 FO
  48   48 1646 3050 FO
  48   48 2138 2979 FO
  48   48 2631 2824 FO
  48   48 3123 2709 FO
  48   48 3616 2541 FO
  48   48 4108 2352 FO
  48   48 4601 2146 FO
DD
gs 661 291 3941 3162 rc
gr

0 sg
%%IncludeResource: font Symbol
/Symbol /WindowsLatin1Encoding 168 FMSR

2579 3767 mt 
(s) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

 401 3172 mt  -90 rotate
(Number of required mobile devices) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 644 3495 mt 
( ) s
4585  333 mt 
( ) s
SO
6 w
1 sg
0 519 1269 0 0 -519 727 881 4 MP
PP
-1269 0 0 519 1269 0 0 -519 727 881 5 MP stroke
4 w
DO
SO
6 w
0 sg
 727  362 mt 1996  362 L
 727  881 mt 1996  881 L
1996  881 mt 1996  362 L
 727  881 mt  727  362 L
 727  881 mt 1996  881 L
 727  881 mt  727  362 L
 727  362 mt 1996  362 L
 727  881 mt 1996  881 L
1996  881 mt 1996  362 L
 727  881 mt  727  362 L
1195  505 mt 
(GCBA+MDSA) s
gs 727 362 1270 520 rc
18 w
c8
360 0 799 462 2 MP stroke
gr

18 w
c8
-55 95 -55 -95 110 0 924 494 4 MP
1 sg
gs
PP
gr
c8
DP
gs 727 362 1270 520 rc
gr

0 sg
1195  664 mt 
(DSBA+MDSA) s
gs 727 362 1270 520 rc
DA
c9
360 0 799 621 2 MP stroke
SO
gr

c9
0 -76 -76 0 0 76 76 0 941 583 5 MP
1 sg
gs
PP
gr
c9
DP
gs 727 362 1270 520 rc
gr

0 sg
1195  823 mt 
(CIBA+MDSA) s
gs 727 362 1270 520 rc
DD
c10
360 0 799 780 2 MP stroke
SO
gr

c10
1 sg
  48   48  979  780 PO
c10
  48   48  979  780 FO
gs 727 362 1270 520 rc
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
